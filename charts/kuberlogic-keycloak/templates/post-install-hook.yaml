---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ .Release.Name }}-post-install-sa"
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "{{ .Release.Name }}-post-install-role"
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
rules:
  - apiGroups:
      - keycloak.org
    resources:
      - keycloaks
      - keycloakrealms
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "{{ .Release.Name }}-post-install-role-binding"
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "{{ .Release.Name }}-post-install-role"
subjects:
  - kind: ServiceAccount
    name: "{{ .Release.Name }}-post-install-sa"
    namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-post-install-job"
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 1
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        hook: "{{ .Release.Name }}-post-install-job"
      name: "{{ .Release.Name }}-post-install-job"
    spec:
      containers:
        - image: {{ .Values.kubectlImage }}
          imagePullPolicy: IfNotPresent
          name: kubectl
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          command:
            - bash
          args:
            - -c
            - "for i in {1..20}; do kubectl -n {{ .Release.Namespace }} get keycloakrealm.keycloak.org kuberlogic -o jsonpath='{.status.ready}' | grep true && exit 0 || echo 'Realm still not ready. Waiting.' && sleep 30; done"
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccountName:  "{{ .Release.Name }}-post-install-sa"
      terminationGracePeriodSeconds: 30