// Code generated by go-swagger; DO NOT EDIT.

package restore

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kuberlogic/kuberlogic/modules/dynamic-apiserver/pkg/generated/models"
)

// RestoreAddCreatedCode is the HTTP code returned for type RestoreAddCreated
const RestoreAddCreatedCode int = 201

/*RestoreAddCreated item created

swagger:response restoreAddCreated
*/
type RestoreAddCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Restore `json:"body,omitempty"`
}

// NewRestoreAddCreated creates RestoreAddCreated with default headers values
func NewRestoreAddCreated() *RestoreAddCreated {

	return &RestoreAddCreated{}
}

// WithPayload adds the payload to the restore add created response
func (o *RestoreAddCreated) WithPayload(payload *models.Restore) *RestoreAddCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the restore add created response
func (o *RestoreAddCreated) SetPayload(payload *models.Restore) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestoreAddCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RestoreAddBadRequestCode is the HTTP code returned for type RestoreAddBadRequest
const RestoreAddBadRequestCode int = 400

/*RestoreAddBadRequest invalid input, object invalid

swagger:response restoreAddBadRequest
*/
type RestoreAddBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRestoreAddBadRequest creates RestoreAddBadRequest with default headers values
func NewRestoreAddBadRequest() *RestoreAddBadRequest {

	return &RestoreAddBadRequest{}
}

// WithPayload adds the payload to the restore add bad request response
func (o *RestoreAddBadRequest) WithPayload(payload *models.Error) *RestoreAddBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the restore add bad request response
func (o *RestoreAddBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestoreAddBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RestoreAddUnauthorizedCode is the HTTP code returned for type RestoreAddUnauthorized
const RestoreAddUnauthorizedCode int = 401

/*RestoreAddUnauthorized bad authentication

swagger:response restoreAddUnauthorized
*/
type RestoreAddUnauthorized struct {
}

// NewRestoreAddUnauthorized creates RestoreAddUnauthorized with default headers values
func NewRestoreAddUnauthorized() *RestoreAddUnauthorized {

	return &RestoreAddUnauthorized{}
}

// WriteResponse to the client
func (o *RestoreAddUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// RestoreAddConflictCode is the HTTP code returned for type RestoreAddConflict
const RestoreAddConflictCode int = 409

/*RestoreAddConflict item already exists

swagger:response restoreAddConflict
*/
type RestoreAddConflict struct {
}

// NewRestoreAddConflict creates RestoreAddConflict with default headers values
func NewRestoreAddConflict() *RestoreAddConflict {

	return &RestoreAddConflict{}
}

// WriteResponse to the client
func (o *RestoreAddConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}

// RestoreAddUnprocessableEntityCode is the HTTP code returned for type RestoreAddUnprocessableEntity
const RestoreAddUnprocessableEntityCode int = 422

/*RestoreAddUnprocessableEntity bad validation

swagger:response restoreAddUnprocessableEntity
*/
type RestoreAddUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRestoreAddUnprocessableEntity creates RestoreAddUnprocessableEntity with default headers values
func NewRestoreAddUnprocessableEntity() *RestoreAddUnprocessableEntity {

	return &RestoreAddUnprocessableEntity{}
}

// WithPayload adds the payload to the restore add unprocessable entity response
func (o *RestoreAddUnprocessableEntity) WithPayload(payload *models.Error) *RestoreAddUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the restore add unprocessable entity response
func (o *RestoreAddUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestoreAddUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RestoreAddServiceUnavailableCode is the HTTP code returned for type RestoreAddServiceUnavailable
const RestoreAddServiceUnavailableCode int = 503

/*RestoreAddServiceUnavailable internal server error

swagger:response restoreAddServiceUnavailable
*/
type RestoreAddServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRestoreAddServiceUnavailable creates RestoreAddServiceUnavailable with default headers values
func NewRestoreAddServiceUnavailable() *RestoreAddServiceUnavailable {

	return &RestoreAddServiceUnavailable{}
}

// WithPayload adds the payload to the restore add service unavailable response
func (o *RestoreAddServiceUnavailable) WithPayload(payload *models.Error) *RestoreAddServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the restore add service unavailable response
func (o *RestoreAddServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestoreAddServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
