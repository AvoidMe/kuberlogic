// Code generated by go-swagger; DO NOT EDIT.

package restore

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kuberlogic/kuberlogic/modules/dynamic-apiserver/pkg/generated/models"
)

// RestoreDeleteOKCode is the HTTP code returned for type RestoreDeleteOK
const RestoreDeleteOKCode int = 200

/*RestoreDeleteOK item deleted

swagger:response restoreDeleteOK
*/
type RestoreDeleteOK struct {
}

// NewRestoreDeleteOK creates RestoreDeleteOK with default headers values
func NewRestoreDeleteOK() *RestoreDeleteOK {

	return &RestoreDeleteOK{}
}

// WriteResponse to the client
func (o *RestoreDeleteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// RestoreDeleteBadRequestCode is the HTTP code returned for type RestoreDeleteBadRequest
const RestoreDeleteBadRequestCode int = 400

/*RestoreDeleteBadRequest invalid input, object invalid

swagger:response restoreDeleteBadRequest
*/
type RestoreDeleteBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRestoreDeleteBadRequest creates RestoreDeleteBadRequest with default headers values
func NewRestoreDeleteBadRequest() *RestoreDeleteBadRequest {

	return &RestoreDeleteBadRequest{}
}

// WithPayload adds the payload to the restore delete bad request response
func (o *RestoreDeleteBadRequest) WithPayload(payload *models.Error) *RestoreDeleteBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the restore delete bad request response
func (o *RestoreDeleteBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestoreDeleteBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RestoreDeleteUnauthorizedCode is the HTTP code returned for type RestoreDeleteUnauthorized
const RestoreDeleteUnauthorizedCode int = 401

/*RestoreDeleteUnauthorized bad authentication

swagger:response restoreDeleteUnauthorized
*/
type RestoreDeleteUnauthorized struct {
}

// NewRestoreDeleteUnauthorized creates RestoreDeleteUnauthorized with default headers values
func NewRestoreDeleteUnauthorized() *RestoreDeleteUnauthorized {

	return &RestoreDeleteUnauthorized{}
}

// WriteResponse to the client
func (o *RestoreDeleteUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// RestoreDeleteForbiddenCode is the HTTP code returned for type RestoreDeleteForbidden
const RestoreDeleteForbiddenCode int = 403

/*RestoreDeleteForbidden bad permissions

swagger:response restoreDeleteForbidden
*/
type RestoreDeleteForbidden struct {
}

// NewRestoreDeleteForbidden creates RestoreDeleteForbidden with default headers values
func NewRestoreDeleteForbidden() *RestoreDeleteForbidden {

	return &RestoreDeleteForbidden{}
}

// WriteResponse to the client
func (o *RestoreDeleteForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// RestoreDeleteNotFoundCode is the HTTP code returned for type RestoreDeleteNotFound
const RestoreDeleteNotFoundCode int = 404

/*RestoreDeleteNotFound item not found

swagger:response restoreDeleteNotFound
*/
type RestoreDeleteNotFound struct {
}

// NewRestoreDeleteNotFound creates RestoreDeleteNotFound with default headers values
func NewRestoreDeleteNotFound() *RestoreDeleteNotFound {

	return &RestoreDeleteNotFound{}
}

// WriteResponse to the client
func (o *RestoreDeleteNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// RestoreDeleteUnprocessableEntityCode is the HTTP code returned for type RestoreDeleteUnprocessableEntity
const RestoreDeleteUnprocessableEntityCode int = 422

/*RestoreDeleteUnprocessableEntity bad validation

swagger:response restoreDeleteUnprocessableEntity
*/
type RestoreDeleteUnprocessableEntity struct {
}

// NewRestoreDeleteUnprocessableEntity creates RestoreDeleteUnprocessableEntity with default headers values
func NewRestoreDeleteUnprocessableEntity() *RestoreDeleteUnprocessableEntity {

	return &RestoreDeleteUnprocessableEntity{}
}

// WriteResponse to the client
func (o *RestoreDeleteUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(422)
}

// RestoreDeleteServiceUnavailableCode is the HTTP code returned for type RestoreDeleteServiceUnavailable
const RestoreDeleteServiceUnavailableCode int = 503

/*RestoreDeleteServiceUnavailable internal server error

swagger:response restoreDeleteServiceUnavailable
*/
type RestoreDeleteServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRestoreDeleteServiceUnavailable creates RestoreDeleteServiceUnavailable with default headers values
func NewRestoreDeleteServiceUnavailable() *RestoreDeleteServiceUnavailable {

	return &RestoreDeleteServiceUnavailable{}
}

// WithPayload adds the payload to the restore delete service unavailable response
func (o *RestoreDeleteServiceUnavailable) WithPayload(payload *models.Error) *RestoreDeleteServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the restore delete service unavailable response
func (o *RestoreDeleteServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestoreDeleteServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
